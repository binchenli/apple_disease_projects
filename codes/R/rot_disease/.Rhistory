library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
# library(ggplot2)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
getwd()
tot<- read.csv("rot.csv",header = TRUE, check.names = F)
rot<- read.csv("rot.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
#env
bioc_hfp <-stack('D:/OneDrive - 西北农林科技大学/programs/R/datas/sdm_project/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
d <- sdmData(rot
~pre + tmn + tmx + tmp + hfp, rot,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
write.csv(df,"./sdm_rot.csv", row.names = FALSE)
m <- sdm(rot ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
#m@models$species$rf$`13`@object
# roc(m)
gui(m)
# mapview(en1)
plot(en1)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
# mapview(en1)
plot(en1)
points(rot,cex=1,pch='*',col='black')
getwd()
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
rot<- read.csv("rot.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/humanfootprint_2000_2017_mean.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp)
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp)
d <- sdmData(rot
~pre + tmn + tmx + tmp + hfp, rot,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
df <- as.data.frame(d) # train datas
write.csv(df,"./sdm_rot.csv", row.names = FALSE)
#getmethodNames()
m <- sdm(rot ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
predictions <- predict(m,bioc_hfp,
mean = T,filename ='all.img',overwrite=TRUE)
points(rot,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1)
# mapview(en1)
plot(en1)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
# mapview(en1)
plot(en1)
points(rot,cex=1,pch='*',col='black')
