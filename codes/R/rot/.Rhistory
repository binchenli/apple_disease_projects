library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
# library(ggplot2)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
getwd()
tot<- read.csv("rot.csv",header = TRUE, check.names = F)
rot<- read.csv("rot.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
#env
bioc_hfp <-stack('D:/OneDrive - 西北农林科技大学/programs/R/datas/sdm_project/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
d <- sdmData(rot
~pre + tmn + tmx + tmp + hfp, rot,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
write.csv(df,"./sdm_rot.csv", row.names = FALSE)
m <- sdm(rot ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
#m@models$species$rf$`13`@object
# roc(m)
gui(m)
# mapview(en1)
plot(en1)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
# mapview(en1)
plot(en1)
points(rot,cex=1,pch='*',col='black')
getwd()
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
rot<- read.csv("rot.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/humanfootprint_2000_2017_mean.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp)
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp)
d <- sdmData(rot
~pre + tmn + tmx + tmp + hfp, rot,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
df <- as.data.frame(d) # train datas
write.csv(df,"./sdm_rot.csv", row.names = FALSE)
#getmethodNames()
m <- sdm(rot ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
predictions <- predict(m,bioc_hfp,
mean = T,filename ='all.img',overwrite=TRUE)
points(rot,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1)
# mapview(en1)
plot(en1)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
# mapview(en1)
plot(en1)
points(rot,cex=1,pch='*',col='black')
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
rot<- read.csv("valsce.csv",header = TRUE, check.names = F)
rot<- read.csv("valsce.csv",header = TRUE, check.names = F)
rot<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
plot(bioc_hfp)
plot(bioc_hfp[[2]])
points(rot,cex=1,pch='*',col='black')
rot<- read.csv("valsa_merge_point.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
plot(bioc_hfp[[2]])
points(rot,cex=1,pch='*',col='black')
points(rot,cex=1,pch='*',col='black')
rot<- read.csv("valsa_merge_point.csv",header = TRUE, check.names = F)
points(rot,cex=1,pch='*',col='black')
rot<- read.csv("valsa_merge_point.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
plot(bioc_hfp[[2]])
points(rot,cex=1,pch='*',col='black')
rot<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(rot) <- ~ lon + lat
plot(bioc_hfp[[2]])
points(rot,cex=1,pch='*',col='black')
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp[[2]])
points(disease_point,cex=1,pch='*',col='black')
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, rot,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, rot,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
plot(bioc_hfp[[2]])
points(disease_point,cex=1,pch='*',col='black')
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp)
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
View(disease_point)
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
View(disease_point)
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp)
points(disease_point,cex=1,pch='*',col='black')
plot(bioc_hfp)
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, infestation_percentage,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, infestation_percentage,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, infestation_percentage,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(disease_point
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
modes <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
View(m)
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d
rm(modes)
#getmethodNames()
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
predictions <- predict(m,bioc_hfp,
mean = T,filename ='all.img',overwrite=TRUE)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
plot(bioc_hfp[[2]])
points(disease_point,cex=1,pch='*',col='black')
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=500))
d
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
write.csv(df,"./data_valsce_sdm.csv", row.names = FALSE)
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
View(disease_point)
#----------read data---------
getwd()
#----------read data---------
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
View(disease_point)
#----------read data---------
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
View(disease_point)
coordinates(disease_point) <- ~ lon + lat
plot(bioc_hfp[[2]])
points(disease_point,cex=1,pch='*',col='black')
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
write.csv(df,"./data_valsce_sdm.csv", row.names = FALSE)
write.csv(df,"./data_valsce_sdm.csv", row.names = FALSE,append = FALSE)
write.csv(df,"./data_valsce.csv", row.names = FALSE)
#getmethodNames()
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
# mapview(en1)
plot(en1)
points(rot,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1)
#----------------------------
worldclim_bio <- raster::getData('worldclim', var='bio', res=10)
names(worldclim_bio)
plot(worldclim_bio[[1]])
country <- readOGR("../../../datas/environment/Province/省级行政区.shp")
country <- spTransform(country, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
plot(country)
worldclim_bioc <- crop(bio, country)
worldclim_bioc <- crop(worldclim_bio, country)
plot(worldclim_bioc[[1]])
worldclim_bioc <- mask(worldclim_bio, country)
plot(worldclim_bioc[[1]])
worldclim_bioc <- crop(worldclim_bio, country)
plot(worldclim_bioc[[1]])
vif_values <- vif(worldclim_bioc)
v <- vifstep(worldclim_bioc)
v
worldclim_bioc <- exclude(worldclim_bioc, v)
plot(worldclim_bioc)
worldclim_d <- sdmData(infestation_percentage
~., disease_point,
predictors = worldclim_bioc,bg = list(method='gRandom',n=1000))
worldclim_d
worldclim_df <- as.data.frame(worldclim_d) # train datas
write.csv(df,"./worldclim_data_valsce.csv", row.names = FALSE)
worldclim_d
worldclim_df <- as.data.frame(worldclim_d) # train datas
write.csv(worldclim_df,"./worldclim_data_valsce.csv", row.names = FALSE)
#getmethodNames()
m <- sdm(infestation_percentage ~.,
data=worldclim_d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
worldclim_en1 <- ensemble(m,worldclim_bioc,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
# mapview(en1)
plot(worldclim_en1)
points(rot,cex=1,pch='*',col='black')
#getmethodNames()
worldclim_m <- sdm(infestation_percentage ~.,
data=worldclim_d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
worldclim_m
#m@models$species$rf$`13`@object
# roc(m)
gui(worldclim_m)
predictions <- predict(worldclim_m,worldclim_bioc,
mean = T,filename ='worldclim_all.img',overwrite=TRUE)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
plot(predictions,col=cl(200))
#getmethodNames()
worldclim_m <- sdm(infestation_percentage ~.,
data=worldclim_d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
worldclim_m
predictions <- predict(worldclim_m, worldclim_bioc,
mean = F,filename ='worldclim_all.img',overwrite=TRUE)
#m@models$species$rf$`13`@object
# roc(m)
gui(worldclim_m)
View(worldclim_bioc)
predictions <- predict(worldclim_m, worldclim_bioc,
mean = F, filename ='all.img',overwrite=TRUE)
