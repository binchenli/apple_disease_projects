library(mapview)
library(lattice)
getwd()
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/datas/fu_lan_bing.csv",header = TRUE, check.names = F)
coordinates(disease_point) <- ~ lon + lat
#env
envs <-stack('../../../datas/environment/envs.tif')
plot(envs[[1]])
plot(envs[[6]])
View(disease_point)
d <- sdmData(infestation_percentage
~., disease_point,
predictors = envs,bg = list(method='gRandom',n=1000))
d
envs
#env
envs <-stack('../../../datas/environment/envs.tif')
names(envs) <- c('pre','tmn','tmp','tmx','hfp','soc','prop','sand','silt','aspect','slope','curvature','dem')
plot(envs[[6]])
d <- sdmData(infestation_percentage
~., disease_point,
predictors = envs,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
write.csv(df,"./data_valsce.csv", row.names = FALSE)
vif_values <- vif(envs)
v <- vifstep(envs)
v
#相关性热图
str(envs)
data.envs <- na.omit(envs@data@values)
cor.data <- round(cor(data.envs[,1:13]), 3)
corrplot(cor.data)
data.envs <- na.omit(envs@data@values)
envs@layers
envs@z
envs@rotation
#相关性热图
str(envs)
library(car)
install.packages('car')
install.packages('corrplot')
install.packages("corrplot")
library(corrplot)
library(car)
library(car)
library(corrplot)
# 计算VIF
vif_values <- vif(envs)
# 计算VIF
vif_values <- vif('./data_valsce.csv')
vif_values <- vif(envs)
envs
vif_values <- vif(envs)
#env
envs <-stack('../../../datas/environment/envs.tif')
vif_values <- vif(envs)
names(envs) <- c('pre','tmn','tmp','tmx','hfp','soc','prop','sand','silt','aspect','slope','curvature','dem')
plot(envs[[8]])
d <- sdmData(infestation_percentage
~., disease_point,
predictors = envs,bg = list(method='gRandom',n=1000))
d
df <- as.data.frame(d) # train datas
write.csv(df,"./data_valsce.csv", row.names = FALSE)
write.csv(df,"./data_valsce.csv", row.names = FALSE)
vif_values <- vif(envs)
library(car)
library(corrplot)
vif_values <- vif(envs)
vif_values <- vif(envs)
v <- vifstep(bioc)
#getmethodNames()
m <- sdm(infestation_percentage ~.,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
#m@models$species$rf$`13`@object
# roc(m)
gui(m)
en1 <- ensemble(m,envs,filename='fu_lan_bing.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
# mapview(en1)
plot(en1)
# mapview(en1)
plot(en1)
# mapview(en1)
plot(en1,col=cl(200))
points(rot,cex=1,pch='*',col='black')
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/datas/fu_lan_bing.csv",header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point, infestation_percentage == 1)
# write.csv(presence_data,"./presence_data.csv", row.names = FALSE)
absence_data <- filter(disease_point, infestation_percentage == 0)
coordinates(disease_point) <- ~ lon + lat
# mapview(en1)
plot(en1,col=cl(200))
points(disease_point,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1,col=cl(200))
points(presidents,cex=1,pch='*',col='black')
points(presidents,cex=1,pch='*',col='black')
points(presence_data,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1,col=cl(300))
# mapview(en1)
plot(en1,col=cl(600))
# mapview(en1)
plot(en1,col=cl(1000))
points(presence_data,cex=1,pch='*',col='black')
points(disease_point,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1,col=cl(100))
points(presence_data,cex=1,pch='*',col='black')
# cl <- colorRampPalette(c('red','orange','yellow','gray','green','blue'))
cl <- colorRampPalette(c('red','gray','green','blue'))
# mapview(en1)
plot(en1,col=cl(100))
# mapview(en1)
plot(en1,col=cl(200))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','yellow','red'))
# mapview(en1)
plot(en1,col=cl(200))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','red'))
# mapview(en1)
plot(en1,col=cl(200))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','red'))
# mapview(en1)
plot(en1,col=cl(200))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','green','red'))
# mapview(en1)
plot(en1,col=cl(200))
# mapview(en1)
plot(en1,col=cl(500))
# mapview(en1)
plot(en1,col=cl(500000))
# mapview(en1)
plot(en1,col=cl(2))
# mapview(en1)
plot(en1,col=cl(300))
points(presence_data,cex=1,pch='*',col='black')
# mapview(en1)
plot(en1,col=cl(300))
# mapview(en1)
plot(en1,col=cl(30000000))
points(presence_data,cex=1,pch='*',col='black')
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('whrite','green','orange','red'))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('white','green','orange','red'))
# mapview(en1)
plot(en1,col=cl(300))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('white','green','orange','red'))
# mapview(en1)
plot(en1,col=cl(100))
points(presence_data,cex=1,pch='*',col='black')
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('white','green','orange','red'))
# mapview(en1)
plot(en1,col=cl(10))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('white','green','orange','red'))
# mapview(en1)
plot(en1,col=cl(5))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','green','orange','red'))
# mapview(en1)
plot(en1,col=cl(4))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','gray','red'))
# mapview(en1)
plot(en1,col=cl(4))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','red'))
# mapview(en1)
plot(en1,col=cl(3))
points(presence_data,cex=1,pch='*',col='black')
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','red'))
# mapview(en1)
plot(en1,col=cl(3))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','yellow','darkred'))
# mapview(en1)
plot(en1,col=cl(3))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(3))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(10))
points(presence_data,cex=1,pch='*',col='black')
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(10))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('green','blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
points(presence_data,cex=1,pch='*',col='black')
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','yellow','red'))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# mapview(en1)
plot(en1,col=cl(10))
# mapview(en1)
plot(en1,col=cl(10))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','orange','yellow','darkred'))
# mapview(en1)
plot(en1,col=cl(10))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','orange','yellow','red'))
# mapview(en1)
plot(en1,col=cl(10))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red'))
# mapview(en1)
plot(en1,col=cl(10))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red','darkred'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','darkred'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','orange','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','green','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','gray','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('blue','gray','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
predictions <- predict(m,envs,
mean = T,filename ='all.img',overwrite=TRUE)
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
library(car)
library(corrplot)
m
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
library(car)
library(corrplot)
m
predictions <- predict(m,envs,
mean = F,filename ='predictions.img',overwrite=TRUE)
predictions <- predict(m,envs,
mean = T,filename ='predictions.img',overwrite=TRUE)
rcurve(m,id=7:12)
rcurve(m,id=1:4)
plot(getVarImp(m,method='rf'))
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')))
plot(getVarImp(m))
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')),col=pa1)
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')),col='pink')
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')))
niche(bio,d,n=c('hfp','tmn'),col=cl(200))
niche(envs,d,n=c('hfp','tmn'),col=cl(200))
d
niche(envs,d,n=c('pre','tmn'),col=cl(200))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red'))
niche(envs,d,n=c('pre','tmn'),col=cl(200))
?niche
envs
niche(envs,disease_point,n=c('pre','tmn'),col=cl(200))
niche(envs,disease_point,n=c('hfp','tmn'),col=cl(200))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl(200))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(200))
cl2 <- colorRampPalette(c('red','orange','yellow','gray','green','blue'))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(200))
cl2 <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(200))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(20))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(10))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(3))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(10))
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl2(10))
niche(envs,h=en1,n=c('hfp','tmn'),col=cl(10))
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')),
title('relative variable importance(averaged)'))
?plot
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')),
main='relative variable importance(averaged)')
plot(getVarImp(m,method=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')),
main='relative variable importance(averaged)')
rcurve(m,id=1:4)
# mapview(en1)
plot(en1,col=cl(20))
#----
df <- data.frame(species=df$species,coordinates(d))
xy <- as.matrix(df[,c('lon','lat')])
#----
df
df <- data.frame(species=df$infestation_percentage,coordinates(d))
#----
df
xy <- as.matrix(df[,c('lon','lat')])
head(xy)
#----
presence_data
xy <- as.matrix(presence_data[,c('lon','lat')])
head(xy)
nrow(xy)
p <- raster::extract(en1,xy)
head(p)
length(p)
df <- data.frame(species=df$infestation_percentage,coordinates(d))
df
xy <- as.matrix(df[,c('lon','lat')])
head(xy)
nrow(xy)
p <- raster::extract(en1,xy)
head(p)
nrow(df)
length(p)
ev <- evaluates(df$infestation_percentage,p)
ev <- evaluates(df$infestation_percentage,p)
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
library(car)
library(corrplot)
ev <- evaluates(df$infestation_percentage,p)
ev <- evaluates(df$species,p)
ev@statistics
ev
head(p)
p
nrow(xy)
length(p)
evaluates_point_data <- cbind(xy,p)
evaluates_point_data
df
evaluates_point_data <- cbind(df,p)
evaluates_point_data
write.csv(df,"./evaluates_point_data.csv", row.names = FALSE)
write.csv(evaluates_point_data,"./evaluates_point_data.csv", row.names = FALSE)
df
ev
ev@statistics
th <- ev@threshold_based$threshold[2]
th
ev
#-----------------
plot(en1 > th, col=cl(20))
#-----------------
plot(en1 > th, col=cl1(200))
#-----------------
plot(en1 > th, col=cl2(200))
cl2 <- colorRampPalette(c('green','#3498DB','yellow','orange','red','darkred'))
#-----------------
plot(en1 > th, col=cl2(200))
#-----------------
plot(en1 > th)
#-----------------
plot(en1 > th, col=cl3(200))
cl3 <- colorRampPalette(c('red','orange','yellow','gray','green','blue'))
#-----------------
plot(en1 > th, col=cl3(200))
#-----------------
plot(en1 > th, col=cl2(200))
#-----------------
plot(en1 > th, col=cl2(200))
#-----------------
plot(en1 > th, col=cl2(200))
cl2 <- colorRampPalette(c('#3498DB','yellow','orange','red','darkred'))
#-----------------
plot(en1 > th, col=cl2(200))
#-----------------
plot(en1 > 0, col=cl2(200))
#-----------------
plot(en1 > th, col=cl2(200))
#-----------------
plot(en1 > 0.5, col=cl2(200))
#-----------------
plot(en1 > th, col=cl2(200))
points(presence_data,cex=1,pch='*',col='black')
#-----------------
plot(en1 > th, col=cl2(200))
proj4string(presence_data) <- projection(en1)
coordinates(presence_data ) <- ~ lon + lat
proj4string(presence_data) <- projection(en1)
points(presence_data,cex=1,pch='*',col='black')
#-----------------
plot(en1 > th, col=cl2(200))
#-----------------
plot(en1 > th, col=cl2(500))
# cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
cl <- colorRampPalette(c('gray','blue','yellow','red'))
# mapview(en1)
plot(en1,col=cl(20))
# mapview(en1)
plot(en1>0.5,col=cl(20))
delete_en1 <- copy(en1)
delete_en1 <- en1
delete_en1[delete_en1 < 0] <- NA
# mapview(en1)
plot(delete_en1,col=cl(20))
# mapview(en1)
plot(delete_en1,col=cl2(200))
rf <- writeRaster(delete_en1,
filename="../../../results/fu_lan_bing_ensemble.tif",overwrite=TRUE)
th
