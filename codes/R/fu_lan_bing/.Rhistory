library(sdm)
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
#----------read data---------
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
nrow(disease_point)
disease_point <- na.omit(disease_point)
nrow(bgs_data)
nrow(disease_point)
disease_point <- na.omit(disease_point)
nrow(disease_point)
#----------read data---------
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
nrow(disease_point)
disease_point <- disease_point[which(rowSums(data) > 0),]
class((disease_point))
class(disease_point)
disease_point <- disease_point[which(rowSums(data) > 0), drop=FALSE]
disease_point <- disease_point[which(rowSums(data) > 0)]
disease_point <- disease_point[which(rowSums(disease_point) > 0)]
disease_point <- [which(rowSums(disease_point) > 0)]
#----------read data---------
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
nrow(disease_point)
coordinates(disease_point) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp[[2]])
points(disease_point,cex=1,pch='*',col='black')
presence_data = filter(disease_point,  infestation_percentage == 1)
#----------read data---------
disease_point<- read.csv("valsce.csv",header = TRUE, check.names = F)
nrow(disease_point)
presence_data = filter(disease_point,  infestation_percentage == 1)
absence_data = filter(disease_point,  infestation_percentage == 0)
plot(bioc_hfp[[2]])
points(presence_data,cex=1,pch='*',col='red')
points(absence_data,cex=1,pch='*',col='black')
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
# d <- sdmData(infestation_percentage
#              ~pre + tmn + tmx + tmp + hfp, disease_point,
#              predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp)
d
#getmethodNames()
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
install.packages(rf)
install.packages('rf')
getmethodNames()
install.packages('glmnet')
install.packages('mlp')
install.packages('randomForest')
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
install.packages('gbm')
install.packages('rbf')
y
install.packages('RBF')
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
install.packages('mlp')
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike','mlp','rbf',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
predictions <- predict(m,bioc_hfp,
mean = T,filename ='all.img',overwrite=TRUE)
#Evaluate the model performance
evaluation <- evaluate(presence_data, absence_data, m)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='weighted',stat='tss',opt=2),overwrite = T)
# mapview(en1)
plot(en1)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='unweighted',stat='tss',opt=2),overwrite = T)
# mapview(en1)
plot(en1)
# mapview(en1)
plot(en1,col=cl(200))
#----------read data---------
disease_point<- read.csv("valsce_only_presence.csv",header = TRUE, check.names = F)
nrow(disease_point)
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=2000))
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=2000))
#----------read data---------
disease_point<- read.csv("valsce_only_presence.csv",header = TRUE, check.names = F)
nrow(disease_point)
coordinates(disease_point) <- ~ lon + lat
#----------read data---------
disease_point<- read.csv("valsce_only_presence.csv",header = TRUE, check.names = F)
View(disease_point)
coordinates(disease_point) <- ~ lon + lat
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=2000))
# d <- sdmData(infestation_percentage
#              ~pre + tmn + tmx + tmp + hfp, disease_point,
#              predictors = bioc_hfp)
d
# getmethodNames()
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
predictions <- predict(m,bioc_hfp,
mean = T,filename ='all.img',overwrite=TRUE)
en1 <- ensemble(m,bioc_hfp,filename='en1.img',
setting=list(method='unweighted',stat='tss',opt=2),overwrite = T)
# mapview(en1)
plot(en1,col=cl(200))
points(rot,cex=1,pch='*',col='black')
points(disease_point,cex=1,pch='*',col='black')
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
View(disease_point)
absence_data = filter(disease_point,  infestation_percentage == 0)
presence_data = filter(disease_point,  infestation_percentage == 1)
presence_data = filter(disease_point,  infestation_percentage == 1)
presence_data = filter(disease_point,  infestation_percentage == 1)
absence_data = filter(disease_point,  infestation_percentage == 0)
nrow(disease_point)
View(disease_point)
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data = filter(disease_point,  infestation == 1)
presence_data <- filter(disease_point,infestation == 1)
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point,infestation_percentage == 1)
?filter
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point,infestation_percentage == 1)
absence_data <- filter(disease_point,infestation_percentage == 0)
View(disease_point)
getwd()
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point, infestation_percentage == 1)
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point, infestation_percentage == 1)
absence_data <- filter(disease_point, infestation_percentage == 0)
coordinates(disease_point) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp[[2]])
points(presence_data,cex=1,pch='*',col='red')
points(absence_data,cex=1,pch='*',col='black')
write.csv(presence_data,"./presence_data.csv", row.names = FALSE)
write.csv(absence_data,"./absence_data.csv", row.names = FALSE)
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point, infestation_percentage == 1)
write.csv(presence_data,"./presence_data.csv", row.names = FALSE)
absence_data <- filter(disease_point, infestation_percentage == 0)
write.csv(absence_data,"./absence_data.csv", row.names = FALSE)
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point, infestation_percentage == 1)
write.csv(presence_data,"./presence_data.csv", row.names = FALSE)
absence_data <- filter(disease_point, infestation_percentage == 0)
write.csv(absence_data,"./absence_data.csv", row.names = FALSE)
#----------read data---------
disease_point<- read.csv("../../../datas/apple_diseases/apple_diseases_sdm/fu_lan_bing.csv",
header = TRUE, check.names = F)
nrow(disease_point)
presence_data <- filter(disease_point, infestation_percentage == 1)
write.csv(presence_data,"./presence_data.csv", row.names = FALSE)
absence_data <- filter(disease_point, infestation_percentage == 0)
write.csv(absence_data,"./absence_data.csv", row.names = FALSE)
coordinates(disease_point) <- ~ lon + lat
#env
bioc_hfp <-stack('../../../datas/environment/2020_2017_mean/bioc_hfp.tif')
names(bioc_hfp) <- c('pre','tmn','tmp','tmx','hfp')
plot(bioc_hfp[[2]])
points(presence_data,cex=1,pch='*',col='red')
points(absence_data,cex=1,pch='*',col='black')
#only presence
nrow(presence_data)
d <- sdmData(infestation_percentage
~pre + tmn + tmx + tmp + hfp, disease_point,
predictors = bioc_hfp,bg = list(method='gRandom',n=1000))
d
# getmethodNames()
m <- sdm(infestation_percentage ~pre + tmn + tmx + tmp + hfp,
data=d, methods=c('glmnet','maxlike',
'gam','gbm','rpart','svm','rf')
,replications='boot',test.p=30,n=10,
parallelSetting=list(ncore=12,method='parallel')) #replications : sub , cv, boot
m
#m@models$species$rf$`13`@object
# roc(m)
gui(m)
installAll()
library(sdm)
installAll()
library(sdm)
library(dismo)
library(dplyr)
library(tidyr)
library(mapview)
library(raster)
library(parallel)
library(usdm)
library(maptools)
library(shiny)
library(kernlab)
library(sf)
library(rgdal)
library(rgeos)
library(sp)
library(corrplot)
library(ncdf4)
library(mapview)
library(lattice)
#m@models$species$rf$`13`@object
# roc(m)
gui(m)
predictions <- predict(m,bioc_hfp,
mean = T,filename ='predictions_only_preesence.img',overwrite=TRUE)
ensemble_only_presence <- ensemble(m,bioc_hfp,filename='ensemble_only_presence.img',
setting=list(method='unweighted',stat='tss',opt=2),overwrite = T)
cl <- colorRampPalette(c('#3E49BB','#3498DB','yellow','orange','red','darkred'))
# mapview(en1)
plot(en1,col=cl(200))
# mapview(en1)
plot(ensemble_only_presence,col=cl(200))
points(presence_data,cex=1,pch='*',col='black')
d
df <- as.data.frame(d) # train datas
write.csv(df,"./op_data_fu_lan_bing.csv", row.names = FALSE)
